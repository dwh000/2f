C51 COMPILER V9.52.0.0   TIMER                                                             01/28/2016 10:05:48 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\debug\timer.obj
COMPILER INVOKED BY: D:\Program Files (x86)\keil\C51\BIN\C51.EXE timer.c OPTIMIZE(7,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\debug\timer.lst) OBJECT(.\debug\timer.obj)

line level    source

   1          /******************************************************************************
   2          *文件名: timer.c
   3          *作  者: 王文辉
   4          *单  位: 唐山智能电子有限公司
   5          *日  期: 2012-9-21
   6          *版  本: 实验版本
   7          *功能描述: 定时器设置及初始化函数
   8          *******************************************************************************/
   9          #include "timer.h"
  10          #include "terminal.h"
  11          
  12          u8bit                   discharge_cnt,  //掉袋定时时间,单位0.1s
  13                                          t3_cnt = 4,             //T3 time base 是25ms,t3_cnt = 4 实现100ms定时
  14                                          t4_cnt = 2;             //T4 time base 是25ms,t4_cnt = 2 实现50ms定时
  15          u8bit xdata     DpCnt = 8,              //用于PB通讯定时.
  16                                          t0_cnt;                 //t0定时器计数个数
  17          bit                             t0_flag;                //T0定时溢出标志
  18          extern bit t1_flag,discharge_pulse_flag,DpEnFlag,disp_flag;
  19          extern u8bit xdata t1_cnt,A_T_time,DpSwitch,DispCnt;
  20          extern u8bit discharge_cnt;
  21          extern u16bit xdata     shut_fb_w,sf_weight,sf_weight_adj_val,weight_correct_val;
  22          
  23          /*******************************************************************************
  24          *原  型:void time01_init(void)
  25          *形  参:无.
  26          *功  能:定时器0及定时器1初始化函数.
  27          *返回值:无.
  28          *******************************************************************************/
  29          void time01_init(void)                          //T0,T1工作于定时器方式1,采用系统时钟48分频
  30          {
  31   1              SFRPAGE = TIMER01_PAGE;
  32   1              CKCON = 0X02;
  33   1              ET0 = 0;
  34   1              TR0 = 0;
  35   1              TR1 = 0;
  36   1              TF0 = 0;
  37   1              TMOD = 0X11;
  38   1              SFRPAGE = CONFIG_PAGE;
  39   1      }
  40          
  41          /*******************************************************************************
  42          *原  型:void time3_init(void)
  43          *形  参:无.
  44          *功  能:定时器3初始化函数.
  45          *返回值:无.
  46          *******************************************************************************/
  47          void time3_init(void)                               //25ms time base,用于产生脉冲宽度
  48          {
  49   1              char SFRPAGE_SAVE;
  50   1              SFRPAGE_SAVE = SFRPAGE;             // Preserve SFRPAGE
  51   1              SFRPAGE = TMR3_PAGE;
  52   1              TMR3CN = 0x00;                      // Timer in 16-bit auto-reload up timer
  53   1              TMR3CF = 0x00;                      // SYSCLK/12 is time base; no output;
  54   1              RCAP3 = 0x4c00;
C51 COMPILER V9.52.0.0   TIMER                                                             01/28/2016 10:05:48 PAGE 2   

  55   1              TMR3 = RCAP3;
  56   1              TR3 = 1;                             // Start Timer3
  57   1              EA = 1;
  58   1              EIE2 |= 0X01;                                           //开定时器3中断
  59   1              SFRPAGE = SFRPAGE_SAVE;             // Restore SFRPAGE
  60   1      }
  61          /*******************************************************************************
  62          *原  型:void time4_init(void)
  63          *形  参:无.
  64          *功  能:定时器4初始化函数.
  65          *返回值:无.
  66          *******************************************************************************/
  67          void time4_init(void)                           //25ms time base ,用于检重秤校正
  68          {
  69   1              char SFRPAGE_SAVE;
  70   1              SFRPAGE_SAVE = SFRPAGE;             // Preserve SFRPAGE
  71   1              SFRPAGE = TMR4_PAGE;
  72   1              TMR4CN = 0x00;                      // Timer in 16-bit auto-reload up timer
  73   1              TMR4CF = 0x00;                      // SYSCLK/12 is time base; no output;
  74   1              RCAP4 = 0x4c00;
  75   1              /*
  76   1              TMR4 = RCAP4;
  77   1              TR4 = 1;                             
  78   1              EA = 1;
  79   1              EIE2 |= 0X04;*/
  80   1              SFRPAGE = SFRPAGE_SAVE;             // Restore SFRPAGE  
  81   1      }
  82          
  83          /*******************************************************************************
  84          *原  型:void t0_1ms(u8bit cnt)
  85          *形  参:无.
  86          *功  能:T0定时器1ms*cnt定时.
  87          *返回值:无.
  88          *******************************************************************************/
  89          void t0_1ms_load()
  90          {
  91   1              SFRPAGE = TIMER01_PAGE;
  92   1              TH0 = 0XFE;
  93   1              TL0 = 0X33;
  94   1              TR0 = 1;
  95   1              while(!TF0);
  96   1              TF0 = 0;
  97   1              SFRPAGE = CONFIG_PAGE;
  98   1      }
  99          /*******************************************************************************
 100          *原  型:void t1_100ms(u8bit cnt)
 101          *形  参:无.
 102          *功  能:T1定时器100ms*cnt定时.
 103          *返回值:无.
 104          *******************************************************************************/
 105          void t1_100ms(u8bit cnt)
 106          {
 107   1              SFRPAGE = TIMER01_PAGE;
 108   1              EA = 1;                                                                                 //开放中断
 109   1              ET1 = 1;                                                                                //开放定时器1中断
 110   1              TH1 = 0X4c;
 111   1              TL1 = 0X00;                                                                             //100ms定时装载初值
 112   1              t1_cnt = cnt;
 113   1              t1_flag = 0;
 114   1              TR1 = 1;
 115   1              SFRPAGE = CONFIG_PAGE;
 116   1      }
C51 COMPILER V9.52.0.0   TIMER                                                             01/28/2016 10:05:48 PAGE 3   

 117          //T1定时器关中断关定时器
 118          void t1_stop(void)
 119                  {
 120   1              SFRPAGE = TIMER01_PAGE;
 121   1              ET1 = 0;                                                                                //关定时器1中断
 122   1              TR1 = 0;
 123   1              SFRPAGE = CONFIG_PAGE;
 124   1              }
 125          //T0定时器关中断关定时器
 126          void t0_stop(void)
 127                  {
 128   1              SFRPAGE = TIMER01_PAGE;
 129   1              ET0 = 0;                                                                                //关定时器0中断
 130   1              TR0 = 0;
 131   1              SFRPAGE = CONFIG_PAGE;
 132   1              }
 133          void T0DelayMs(u8bit cnt)
 134          {
 135   1              u8bit temp_ea = EA;
 136   1              while(cnt){
 137   2                      t0_1ms_load();
 138   2                      cnt--;
 139   2              }
 140   1              t0_stop();
 141   1              EA = temp_ea;
 142   1      }
 143          #if !saima
              /*******************************************************************************
              *原  型:void discharge_pulse100ms(u8bit cnt);
              *形  参:        cnt                     掉袋脉冲宽度 
              *功  能:T3启动 (cnt * 0.1) s 定时,用于输出掉袋脉冲.
              *返回值:无.
              *******************************************************************************/
              void discharge_pulse100ms(u8bit cnt)
              {
                      discharge_bag_sw_out = OPEN;
                      discharge_cnt = cnt;
                      discharge_pulse_flag = 1;
              }
              #endif
 157          /*******************************************************************************
 158          *原  型:void t4_50ms_cl_track(u8bit a_t);
 159          *形  参:        a_t                     抵达时间 
 160          *功  能:T4启动 (a_t * 0.05) s 定时,用于闭环校正功能.
 161          *返回值:无.
 162          *******************************************************************************/
 163          void t4_50ms_cl_track(u8bit a_t)
 164          {
 165   1              char SFRPAGE_SAVE;
 166   1              A_T_time = a_t;
 167   1              SFRPAGE_SAVE = SFRPAGE;             // Preserve SFRPAGE
 168   1              SFRPAGE = TMR4_PAGE;
 169   1              TMR4 = RCAP4;
 170   1              TR4 = 1;                             
 171   1              EA = 1;
 172   1              EIE2 |= 0X04;
 173   1              SFRPAGE = SFRPAGE_SAVE;             // Restore SFRPAGE
 174   1      }
 175          /*定时器0中断服务程序*********************************************************
 176          void t0_int(void) interrupt 1                           //用于延时1ms(time base)
 177          {
 178                  TH0 = 0XFE;
C51 COMPILER V9.52.0.0   TIMER                                                             01/28/2016 10:05:48 PAGE 4   

 179                  TL0 = 0X33;                                                             //1ms定时重装
 180                  t0_cnt--;
 181                  if(t0_cnt == 0) t0_flag = 1;
 182          }*/
 183          /*定时器1中断服务程序**********************************************************/        
 184          void t1_int(void) interrupt 3                               //用于延时100ms(time base)
 185          {
 186   1          TH1 = 0X4c;
 187   1          TL1 = 0X00;                                             //100ms定时重装
 188   1          t1_cnt--;
 189   1          if(t1_cnt == 0) t1_flag = 1;
 190   1      }
 191          /*定时器3中断服务程序**********************************************************/
 192          void t3_int(void) interrupt 14                              //t3定时器中断,用于产生脉冲,中断周期:25ms
 193          {
 194   1          if(discharge_pulse_flag){                               //关闸板定时控制
 195   2              if((--t3_cnt) == 0){
 196   3                  if(--discharge_cnt == 0){
 197   4                      discharge_pulse_flag = 0;
 198   4                      discharge_bag_sw_out = SHUT;
 199   4                  }
 200   3              t3_cnt = 4;
 201   3              }
 202   2          }
 203   1          if(!disp_flag){
 204   2              if(++DispCnt == 8){
 205   3                  DispCnt = 0;
 206   3                  disp_flag = 1;
 207   3              }
 208   2          }
 209   1          #if DP_ON
 210   1          if((DpEnFlag == 1) && (DpSwitch == ON)){
 211   2              if((--DpCnt) == 0){
 212   3                  EA = 0;
 213   3                  DpDataExchange();
 214   3                  EA = 1;
 215   3                  DpCnt = 8;
 216   3              }
 217   2          }
 218   1          #endif //END OF DP_ON
 219   1          TF3 = 0;
 220   1      }
 221          /*定时器4中断服务程序**********************************************************/
 222          void t4_int(void) interrupt 16          //T4定时器中断,50ms(time base),用于自修正
 223          {
 224   1          if((--t4_cnt) == 0){ 
 225   2              if((--A_T_time) == 0){
 226   3                  if(add_correct == 1)        shut_fb_w += weight_correct_val;
 227   3                  if(reduce_correct == 1)     shut_fb_w -= weight_correct_val;
 228   3                  TR4 = 0;
 229   3                  sf_weight = shut_fb_w - sf_weight_adj_val;
 230   3              }
 231   2              t4_cnt = 2;
 232   2          }
 233   1          TF4 = 0;
 234   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    460    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
C51 COMPILER V9.52.0.0   TIMER                                                             01/28/2016 10:05:48 PAGE 5   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
